<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{52512D36-B5D0-4883-837B-4B56FF5AD31F}</ProjectGuid>
    <RootNamespace>fooopenlyrics</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IntDir>$(SolutionDir)intermediate\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IntDir>$(SolutionDir)intermediate\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(SolutionDir)intermediate\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(SolutionDir)intermediate\$(ProjectName)\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(TargetDir)generated;$(SolutionDir)/../src;$(SolutionDir)/../3rdparty/stb;$(SolutionDir)/../3rdparty/foo_SDK;$(SolutionDir)/../3rdparty/foo_SDK/foobar2000;$(SolutionDir)/../3rdparty/columns_ui-sdk-7.0.0-beta.2;$(SolutionDir)/../3rdparty/WTL10_10320_Release/Include;$(SolutionDir)/../3rdparty/cJSON;$(SolutionDir)/../3rdparty/pugixml-1.12.1/src;$(SolutionDir)/../3rdparty/tidy-html5-5.8.0/include;$(SolutionDir)/../3rdparty/libdivide;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <PreprocessorDefinitions>BUILDING_OPENLYRICS_DLL;TIDY_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>false</ConformanceMode>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(SolutionDir)/../3rdparty/foo_SDK/foobar2000/shared/shared-Win32.lib;bcrypt.lib;d2d1.lib;d3d11.lib;dwrite.lib;dxguid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>pwsh $(SolutionDir)generate_version_header.ps1 -output_path $(TargetDir)generated\openlyrics_version.h
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>$(TargetDir)generated;$(SolutionDir)/../src;$(SolutionDir)/../3rdparty/stb;$(SolutionDir)/../3rdparty/foo_SDK;$(SolutionDir)/../3rdparty/foo_SDK/foobar2000;$(SolutionDir)/../3rdparty/columns_ui-sdk-7.0.0-beta.2;$(SolutionDir)/../3rdparty/WTL10_10320_Release/Include;$(SolutionDir)/../3rdparty/cJSON;$(SolutionDir)/../3rdparty/pugixml-1.12.1/src;$(SolutionDir)/../3rdparty/tidy-html5-5.8.0/include;$(SolutionDir)/../3rdparty/libdivide;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <PreprocessorDefinitions>BUILDING_OPENLYRICS_DLL;TIDY_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>$(SolutionDir)/../3rdparty/foo_SDK/foobar2000/shared/shared-x64.lib;bcrypt.lib;d2d1.lib;d3d11.lib;dwrite.lib;dxguid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>false</ConformanceMode>
      <TreatWarningAsError>true</TreatWarningAsError>
      <OmitFramePointers>false</OmitFramePointers>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <PreBuildEvent>
      <Command>pwsh $(SolutionDir)generate_version_header.ps1 -output_path $(TargetDir)generated\openlyrics_version.h
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>false</ConformanceMode>
      <AdditionalIncludeDirectories>$(TargetDir)generated;$(SolutionDir)/../src;$(SolutionDir)/../3rdparty/stb;$(SolutionDir)/../3rdparty/foo_SDK;$(SolutionDir)/../3rdparty/foo_SDK/foobar2000;$(SolutionDir)/../3rdparty/columns_ui-sdk-7.0.0-beta.2;$(SolutionDir)/../3rdparty/WTL10_10320_Release/Include;$(SolutionDir)/../3rdparty/cJSON;$(SolutionDir)/../3rdparty/pugixml-1.12.1/src;$(SolutionDir)/../3rdparty/tidy-html5-5.8.0/include;$(SolutionDir)/../3rdparty/libdivide;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PreprocessorDefinitions>BUILDING_OPENLYRICS_DLL;NDEBUG;_WINDLL;TIDY_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <TreatWarningAsError>false</TreatWarningAsError>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>$(SolutionDir)/../3rdparty/foo_SDK/foobar2000/shared/shared-Win32.lib;bcrypt.lib;d2d1.lib;d3d11.lib;dwrite.lib;dxguid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>pwsh $(SolutionDir)generate_version_header.ps1 -output_path $(TargetDir)generated\openlyrics_version.h
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>false</ConformanceMode>
      <AdditionalIncludeDirectories>$(TargetDir)generated;$(SolutionDir)/../src;$(SolutionDir)/../3rdparty/stb;$(SolutionDir)/../3rdparty/foo_SDK;$(SolutionDir)/../3rdparty/foo_SDK/foobar2000;$(SolutionDir)/../3rdparty/columns_ui-sdk-7.0.0-beta.2;$(SolutionDir)/../3rdparty/WTL10_10320_Release/Include;$(SolutionDir)/../3rdparty/cJSON;$(SolutionDir)/../3rdparty/pugixml-1.12.1/src;$(SolutionDir)/../3rdparty/tidy-html5-5.8.0/include;$(SolutionDir)/../3rdparty/libdivide;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <FloatingPointModel>Fast</FloatingPointModel>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PreprocessorDefinitions>BUILDING_OPENLYRICS_DLL;NDEBUG;_WINDLL;TIDY_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>$(SolutionDir)/../3rdparty/foo_SDK/foobar2000/shared/shared-x64.lib;bcrypt.lib;d2d1.lib;d3d11.lib;dwrite.lib;dxguid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>false</ConformanceMode>
      <TreatWarningAsError>false</TreatWarningAsError>
      <OmitFramePointers>false</OmitFramePointers>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PreBuildEvent>
      <Command>pwsh $(SolutionDir)generate_version_header.ps1 -output_path $(TargetDir)generated\openlyrics_version.h
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\3rdparty\cJSON\cJSON.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\config\config_font.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_display_background.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_edit.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_display.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_root.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_saving.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_search.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_searchsources.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_src_localfiles.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_src_metadatatags.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_src_musixmatch.cpp" />
    <ClCompile Include="..\src\config\ui_preferences_upload.cpp" />
    <ClCompile Include="..\src\hash_utils.cpp" />
    <ClCompile Include="..\src\img_processing.cpp" />
    <ClCompile Include="..\src\logging.cpp" />
    <ClCompile Include="..\src\lyric_auto_edit.cpp" />
    <ClCompile Include="..\src\lyric_data.cpp" />
    <ClCompile Include="..\src\lyric_io.cpp" />
    <ClCompile Include="..\src\lyric_metadata.cpp" />
    <ClCompile Include="..\src\lyric_metadb_index_client.cpp" />
    <ClCompile Include="..\src\lyric_search.cpp" />
    <ClCompile Include="..\src\main.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\metadb_index_search_avoidance.cpp" />
    <ClCompile Include="..\src\metrics.cpp" />
    <ClCompile Include="..\src\parsers\lrc.cpp" />
    <ClCompile Include="..\src\PCH.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\sources\azlyricscom.cpp" />
    <ClCompile Include="..\src\sources\bandcamp.cpp" />
    <ClCompile Include="..\src\sources\darklyrics.cpp" />
    <ClCompile Include="..\src\sources\id3tag.cpp" />
    <ClCompile Include="..\src\sources\letras.cpp" />
    <ClCompile Include="..\src\sources\lrclib.cpp" />
    <ClCompile Include="..\src\sources\lyricfind.cpp" />
    <ClCompile Include="..\src\sources\lyricsify.cpp" />
    <ClCompile Include="..\src\sources\lyric_source.cpp" />
    <ClCompile Include="..\src\sources\metalarchives.cpp" />
    <ClCompile Include="..\src\sources\musixmatch.cpp" />
    <ClCompile Include="..\src\sources\netease.cpp" />
    <ClCompile Include="..\src\sources\qqmusic.cpp" />
    <ClCompile Include="..\src\sources\songlyrics.cpp" />
    <ClCompile Include="..\src\tag_util.cpp" />
    <ClCompile Include="..\src\ui_contextmenu.cpp" />
    <ClCompile Include="..\src\ui_lyrics_uielement.cpp" />
    <ClCompile Include="..\src\ui_lyrics_externalwindow.cpp" />
    <ClCompile Include="..\src\ui_lyric_bulk_search.cpp" />
    <ClCompile Include="..\src\ui_lyric_editor.cpp" />
    <ClCompile Include="..\src\ui_lyric_manual_search.cpp" />
    <ClCompile Include="..\src\sources\geniuscom.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\sources\localfiles.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\ui_lyrics_panel.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Use</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Use</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="..\src\ui_util.cpp" />
    <ClCompile Include="..\src\win32_util.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\3rdparty\cJSON\cJSON.h" />
    <ClInclude Include="..\src\config\config_auto.h" />
    <ClInclude Include="..\src\config\config_font.h" />
    <ClInclude Include="..\src\hash_utils.h" />
    <ClInclude Include="..\src\img_processing.h" />
    <ClInclude Include="..\src\logging.h" />
    <ClInclude Include="..\src\lyric_auto_edit.h" />
    <ClInclude Include="..\src\lyric_data.h" />
    <ClInclude Include="..\src\lyric_io.h" />
    <ClInclude Include="..\src\lyric_metadata.h" />
    <ClInclude Include="..\src\lyric_metadb_index_client.h" />
    <ClInclude Include="..\src\lyric_search.h" />
    <ClInclude Include="..\src\math_util.h" />
    <ClInclude Include="..\src\metadb_index_search_avoidance.h" />
    <ClInclude Include="..\src\mvtf\mvtf.h" />
    <ClInclude Include="..\src\openlyrics_algorithms.h" />
    <ClInclude Include="..\src\parsers.h" />
    <ClInclude Include="..\src\preferences.h" />
    <ClInclude Include="..\src\resource.h" />
    <ClInclude Include="..\src\sources\lyric_source.h" />
    <ClInclude Include="..\src\stdafx.h" />
    <ClInclude Include="..\src\string_split.h" />
    <ClInclude Include="..\src\tag_util.h" />
    <ClInclude Include="..\src\uie_shim_panel.h" />
    <ClInclude Include="..\src\ui_hooks.h" />
    <ClInclude Include="..\src\win32_util.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\3rdparty\columns_ui-sdk-7.0.0-beta.2\columns_ui-sdk-public.vcxproj">
      <Project>{3181fc06-b4ed-4609-8b4f-7220571c6992}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\foo_SDK\foobar2000\foobar2000_component_client\foobar2000_component_client.vcxproj">
      <Project>{71ad2674-065b-48f5-b8b0-e1f9d3892081}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\foo_SDK\foobar2000\helpers\foobar2000_sdk_helpers.vcxproj">
      <Project>{ee47764e-a202-4f85-a767-abdab4aff35f}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\foo_SDK\foobar2000\SDK\foobar2000_SDK.vcxproj">
      <Project>{e8091321-d79d-4575-86ef-064ea1a4a20d}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\foo_SDK\libPPUI\libPPUI.vcxproj">
      <Project>{7729eb82-4069-4414-964b-ad399091a03f}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\foo_SDK\pfc\pfc.vcxproj">
      <Project>{ebfffb4e-261d-44d3-b89c-957b31a0bf9c}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\pugixml-1.12.1\scripts\pugixml_vs2022_static.vcxproj">
      <Project>{07cf01c0-b887-499d-ad9c-799cb6a9fe64}</Project>
    </ProjectReference>
    <ProjectReference Include="..\3rdparty\tidy-html5-5.8.0\openlyrics_build\tidy-static.vcxproj">
      <Project>{7172cdeb-2391-41c4-883d-bd2c7b60c715}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\src\foo_openlyrics.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="..\3rdparty\foo_SDK\libPPUI\IDI_SCROLL.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>